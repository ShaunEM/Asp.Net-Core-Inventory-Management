@model coderush.Models.Product

@{
    ViewData["Title"] = "Stock Parts";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">

    <!-- Main content -->
    <section class="content">
        <!-- Default box -->
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title"><i class="fa fa-building"></i> @ViewData["Title"]</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="content-container-fluid">
                    <div class="row">
                        <dl class="dl-horizontal">
                            <dt>
                                @Html.DisplayNameFor(model => model.ProductName)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.ProductName)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.Description)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.Description)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.InternalPartNumber)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.InternalPartNumber)
                            </dd>
                        </dl>
                    </div>
                </div>
            </div>
            <!-- /.box-body -->
           
            <!-- /.box-footer-->
        </div>
        <!-- /.box -->
        <div class="box">
            
            <div class="box-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div id="Grid"></div>
                    </div>
                </div>
               
            </div>
        </div>
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->



@section Styles{

}

@section Scripts{

    <script type="text/javascript">
        $(function () {

            var dataManager = ej.DataManager({
                url: "/api/ProductPart",
                adaptor: new ej.WebApiAdaptor(),
                headers: [{ "ProductId": @Model.ProductId}],
                offline: true
            });

            var dataManagerPartType = ej.DataManager({
                url: "/api/PartType",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerPart = ej.DataManager({
                url: "/api/Part",
                adaptor: new ej.WebApiAdaptor()
            });


            dataManager.ready.done(function (e) {
                $("#Grid").ejGrid({
                    dataSource: ej.DataManager({
                        json: e.result,
                        adaptor: new ej.remoteSaveAdaptor(),
                        insertUrl: "/api/ProductPart/Insert",
                        updateUrl: "/api/ProductPart/Update",
                        removeUrl: "/api/ProductPart/Remove",
                    }),
                    toolbarSettings: {
                        showToolbar: true,
                        toolbarItems: ["add", "edit", "delete", "update", "cancel"]
                    },
                    editSettings: {
                        allowEditing: true,
                        allowAdding: true,
                        allowDeleting: true,
                        showDeleteConfirmDialog: true,
                        editMode: "dialog"
                    },
                    allowPaging: true,
                    columns: [
                        { field: "ProductId", headerText: 'Product Id', defaultValue: @Model.ProductId, visible: false },
                        { field: "ProductPartId", headerText: 'Product Part Id', isPrimaryKey: true, isIdentity: true, visible: false },
                        { field: "PartTypeId", headerText: 'Part Type', foreignKeyField: "PartTypeId", foreignKeyValue: "PartTypeName", dataSource: dataManagerPartType },
                        { field: "PartId", headerText: 'Part', foreignKeyField: "PartId", foreignKeyValue: "PartName", dataSource: dataManagerPart },
                        { field: "QTY", headerText: 'Quantity', defaultValue: 1, editType: "numericedit", format: "{0:n2}" },
                        { field: "Description", headerText: 'Description' },
                    ],
                    actionComplete: "complete",
                });
            });
        });
        function complete(args) {

            if (args.requestType == 'beginedit') {
                $("#" + this._id + "_dialogEdit").ejDialog({ title: "Edit Record" });
            }
            if (args.requestType == 'beginedit' || args.requestType == 'add') {
                $('#GridPartTypeId').ejDropDownList({ change: 'partTypeDdlChange' });
            }
        }
        function partTypeDdlChange(e) {
            $.ajax({
                url: '/api/Part/GetByPartTypeId/' + e.selectedValue,
                type: 'GET',
                success: function (data) {
                    $("#GridPartId").ejDropDownList({
                        dataSource: data,
                        fields: { id: 'PartId', text: 'PartName', value: 'PartId' },
                     });
                }
            })
        }


    </script>
}

