@model coderush.Models.Stock
@{
    ViewData["Title"] = "Stock BOM";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">

    <!-- Main content -->
    <section class="content">
        <!-- Default box -->
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title"><i class="fa fa-building"></i> @ViewData["Title"]</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="content-container-fluid">
                    <div class="row">
                        <dl class="dl-horizontal">
                            <dt>
                                @Html.DisplayNameFor(model => model.StockName)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.StockName)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.Description)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.Description)
                            </dd>
                        </dl>
                    </div>
                </div>
            </div>
            <!-- /.box-body -->
            <!-- /.box-footer-->
        </div>
        <!-- /.box -->
        <div class="box">
            <div class="box-body">
                <div class="row">
                    <div class="col-lg-12">
                        <span>Stock BOM</span>
                        <div id="Grid"></div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->



@section Styles{

}

@section Scripts{

    <script type="text/javascript">
        $(function () {
            var dataManager = ej.DataManager({
                url: "/api/StockBilOfMaterial/GetBilOfMaterial/@Model.StockId",
                adaptor: new ej.WebApiAdaptor(),
                offline: true
            });
            var dataManagerStock = ej.DataManager({
                url: "/api/Stock",
                adaptor: new ej.WebApiAdaptor()
            });


            dataManager.ready.done(function (e) {

                $("#Grid").ejGrid({
                    dataSource: ej.DataManager({
                        json: e.result,
                        adaptor: new ej.remoteSaveAdaptor(),
                        insertUrl: "/api/StockBilOfMaterial/Insert",
                        updateUrl: "/api/StockBilOfMaterial/Update",
                        removeUrl: "/api/StockBilOfMaterial/Remove",
                    }),
                    toolbarSettings: {
                        showToolbar: true,
                        toolbarItems: ["add", "edit", "delete", "update", "cancel", "search", "printGrid"]
                    },
                    editSettings: {
                        allowEditing: true,
                        allowAdding: true,
                        allowDeleting: true,
                        showDeleteConfirmDialog: true,
                        editMode: "dialog"
                    },
                    isResponsive: true,
                    enableResponsiveRow: true,
                    allowSorting: true,
                    allowSearching: true,
                    allowFiltering: true,
                    filterSettings: {
                        filterType: "excel",
                        maxFilterChoices: 100,
                        enableCaseSensitivity: false
                    },
                    allowPaging: true,
                    pageSettings: { pageSize: 10, printMode: ej.Grid.PrintMode.CurrentPage },
                    columns: [
                        { field: "StockBilOfMaterialId", isPrimaryKey: true, visible: false, isIdentity: true, },
                        { field: "StockId", headerText: 'BOM Id', defaultValue: @Model.StockId, visible: false },
                        { field: "Child_StockId", headerText: 'StockName', foreignKeyField: "StockId", foreignKeyValue: "StockName", dataSource: dataManagerStock },
                        { field: "InternalPartNumber", headerText: 'InternalPartNumber', allowEditing: false },
                        { field: "QTY", headerText: 'Quantity', defaultValue: 1, editType: "numericedit", format: "{0:n2}" },
                    ],
                    actionComplete: "complete",
                });
            });
        });



        function complete(args) {
            if (args.requestType == 'beginedit') {
                $("#" + this._id + "_dialogEdit").ejDialog({ title: "Edit Record" });
            }
            if (args.requestType == 'beginedit' || args.requestType == 'add') {
                $('#GridChild_StockId').ejDropDownList({ change: 'child_StockIdDdlChange' });
            }
        }
        function child_StockIdDdlChange(e) {
            $.ajax({
                url: '/api/Stock/GetByStockId/' + e.selectedValue,
                type: 'GET',
                success: function (data) {
                    $("#GridInternalPartNumber").val(data.InternalPartNumber);
                }
            })
        }



    </script>
}

